{"version":3,"file":"src_app_pages_login_login_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AACd;AAEzC,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,kDAAS;KACrB;CACF,CAAC;IAMW,sBAAsB,SAAtB,sBAAsB;CAAG;AAAzB,sBAAsB;IAJlC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,sBAAsB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;ACfM;AACM;AACF;AACA;AAEJ;AACuB;IAMnD,eAAe,SAAf,eAAe;CAAG;AAAlB,eAAe;IAJ3B,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,yDAAY,EAAE,uDAAW,EAAE,uDAAW,EAAE,yEAAsB,CAAC;QACzE,YAAY,EAAE,CAAC,kDAAS,CAAC;KAC1B,CAAC;GACW,eAAe,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZ5B;AACA;AACA;AACA;AACA;IAOaK,SAAS,SAATA,SAAS;EACpBC,YACUC,OADV,EAEUC,GAFV,EAGUC,MAHV,EAIUC,aAJV,EAIsC;IAH5B;IACA;IACA;IACA;IAKV,kBAAa,IAAb;EAJI;;EAMEC,KAAK;IAAA;;IAAA;MACT,KAAI,CAACC,UAAL,GAAkB,KAAlB;;MACA,IAAI,KAAI,CAACC,SAAL,IAAkB,KAAI,CAACC,QAA3B,EAAqC;QACnC,IAAIC,IAAI,GAAG;UAAEC,QAAQ,EAAE,KAAI,CAACH,SAAjB;UAA4BC,QAAQ,EAAE,KAAI,CAACA;QAA3C,CAAX;QACA,MAAM,KAAI,CAACN,GAAL,CACHS,IADG,CACE,QADF,EACYF,IADZ,EAEHG,SAFG,GAGHC,IAHG;UAAA,mJAIF,WAAOC,GAAP,EAAmB;YACjB,KAAI,CAACR,UAAL,GAAkB,IAAlB;YACA,MAAM,KAAI,CAACF,aAAL,CAAmBW,SAAnB,CAA6B,oBAA7B,CAAN;YACA,MAAM,KAAI,CAACd,OAAL,CAAae,GAAb,CAAiB,OAAjB,EAA0BF,GAAG,CAACG,KAA9B,CAAN;YACA,MAAM,KAAI,CAACd,MAAL,CAAYe,aAAZ,CAA0B,OAA1B,CAAN;UACD,CATC;;UAAA;YAAA;UAAA;QAAA,KAUDC,KAAD,IAAU;UACR,KAAI,CAACb,UAAL,GAAkB,IAAlB;QACD,CAZC,CAAN;MAcD;IAlBQ;EAmBV;;EAEDc,YAAY;IACV,KAAKjB,MAAL,CAAYe,aAAZ,CAA0B,WAA1B;EACD;;AAnCmB;;;QATbtB,mDAAOA;;QACPC,gEAAUA;;QAFVF,mDAAMA;;QAGNG,sEAAaA;;;AAOTC,SAAS,sDALrBL,wDAAS,CAAC;EACT2B,QAAQ,EAAE,WADD;EAETC,UAAAA,wDAFS;;AAAA,CAAD,CAKY,GAATvB,SAAS,CAAT","sources":["./src/app/pages/login/login-routing.module.ts","./src/app/pages/login/login.module.ts","./src/app/pages/login/login.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule } from '@angular/forms';\n\nimport { LoginPage } from './login.page';\nimport { LoginPageRoutingModule } from './login-routing.module';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, IonicModule, LoginPageRoutingModule],\n  declarations: [LoginPage],\n})\nexport class LoginPageModule {}\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Storage } from '@ionic/storage';\nimport { ApiService } from 'src/services/api.service';\nimport { SharedService } from 'src/services/shared.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: 'login.page.html',\n  styleUrls: ['login.page.scss'],\n})\nexport class LoginPage {\n  constructor(\n    private storage: Storage,\n    private api: ApiService,\n    private router: Router,\n    private sharedService: SharedService\n  ) {}\n\n  userLogin: string;\n  password: string;\n  btnEnabled = true;\n\n  async login() {\n    this.btnEnabled = false;\n    if (this.userLogin && this.password) {\n      let body = { username: this.userLogin, password: this.password };\n      await this.api\n        .post('/login', body)\n        .toPromise()\n        .then(\n          async (res: any) => {\n            this.btnEnabled = true;\n            await this.sharedService.showToast('Logado com sucesso');\n            await this.storage.set('token', res.token);\n            await this.router.navigateByUrl('/home');\n          },\n          (error) => {\n            this.btnEnabled = true;\n          }\n        );\n    }\n  }\n\n  goToRegister() {\n    this.router.navigateByUrl('/register');\n  }\n}\n"],"names":["Component","Router","Storage","ApiService","SharedService","LoginPage","constructor","storage","api","router","sharedService","login","btnEnabled","userLogin","password","body","username","post","toPromise","then","res","showToast","set","token","navigateByUrl","error","goToRegister","selector","template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}